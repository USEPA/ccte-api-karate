# This workflow will build a Karate project with Java

# This workflow is set to dispatch based on user input from a drop-down menu.
# Environment defaults to 'prod' and requires no selection. Test requires the choice of a tag before the run can begin.
# The fail-fast setting has been disabled to ensure that the entire test is allowed to complete in the presence of failures.
# This will allow actions to upload an Artifact for viewing regardless of results. Artifacts are labeled Date/Time

name: Karate

on:
  workflow_dispatch:
    inputs:
       env:
        description: 'Environment'
        required: false
        default: 'prod'
        type: choice
        options:
        - prod
        - stg
       test:
        description: 'Test Type'
        required: true
        default: 'smoke'
        type: choice
        options:
        - smoke
        - regression
        - data
        - variables
        - cors
        - security
       #directory reference runs faster than issuing a 2nd tag in github actions
       sub-test:
        description: 'API Selection (cors and security must match)'
        required: true
        default: 'chemical'
        type: choice
        options:
        - bioactivity
        - chemical
        - exposure
        - hazard
        - cors
        - security

jobs:

  build:

    runs-on: th878
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'oracle'
        
    - name: Run Karate with Java
      run: java -jar karate-1.4.1.jar -t @${{ inputs.test }} -e ${{ inputs.env }} ccte-api/${{ inputs.sub-test }} -o ccte-api/results/
 
  result:
    runs-on: th878
    needs: build
    steps:
    - name: Get current date
      id: date
      run: echo "date=$(TZ=":EST" date +'%Y-%m-%d %H.%MEST')" >>$GITHUB_OUTPUT
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.1      
      if: ${{ always() }}
      with:
    # Artifact name
        name: ${{ inputs.sub-test }} ${{ inputs.test }} Result ${{ steps.date.outputs.date }}
    # A file, directory or wildcard pattern that describes what to upload
        path: ccte-api/results/

  clean-up:
   runs-on: th878
   needs: result
   steps:
    - name: 'Cleanup build folder'
      run: |
        ls -la ./
        rm -rf ./* || true
        rm -rf ./.??* || true
        ls -la ./
